{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prw\\\\OneDrive\\\\Bureau\\\\dev\\\\django-react-portfolio\\\\frontend\\\\src\\\\components\\\\Experiences\\\\Jobs.tsx\",\n  _s = $RefreshSig$();\nimport \"../../styles/jobs.scss\";\nimport ExperienceCard from \"./ExperienceCard\";\nimport { ThpaceGL } from 'thpace';\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst jobDescInsee = `\nMore coming...`;\nconst jobDescSteelSeries = `\n- Working for a US/French team in SteelSeries, one of the world leaders in gaming hardware\n- Design and development with React and Python of a software tool for generating configurations from images and videos for automated video clip captures\n- Close collaboration with the team to ensure seamless integration of the tool into the existing ecosystem`;\nconst jobDescLig = `\n- Research into new methods for processing VAD (Voice Activity Detection) output data to create speech segmentation\n- Development and training of supervised learning models\n- Writing of a scientific article`;\nconst Jobs = () => {\n  _s();\n  const canvas = useRef();\n  const settings = {\n    colors: ['#4CB1EF', '#424959', '#FF4B44'],\n    triangleSize: 100\n  };\n  ThpaceGL.create(canvas.current, settings);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas,\n      onLoad: () => ThpaceGL.create(canvas.current, settings)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"job-title\",\n        children: \"Professional Experience \\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83D\\uDCBB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jobs-list\",\n        children: [/*#__PURE__*/_jsxDEV(ExperienceCard, {\n          title: \"Software Engineer\",\n          company: \"INSEE\",\n          description: jobDescInsee,\n          duration: \"2024 - now\",\n          link: \"insee.com\",\n          location: \"Lille\",\n          skills: ['Python', 'React', 'Java', 'Spring']\n        }, 'cl√©', false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ExperienceCard, {\n          title: \"Intern Software Engineer\",\n          company: \"SteelSeries\",\n          description: jobDescSteelSeries,\n          duration: \"2023 - 2024\",\n          link: \"steelseries.com\",\n          location: \"Lille\",\n          skills: ['Python', 'React', 'Pywebview', 'OpenCV', 'TypeScript', 'Redux']\n        }, 'cl√©', false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ExperienceCard, {\n          title: \"Intern R&D Engineer\",\n          company: \"LIG\",\n          description: jobDescLig,\n          duration: \"2022\",\n          link: \"liglab.fr\",\n          location: \"Grenoble\",\n          skills: ['Python', 'Pytorch', 'Scikit-Learn', 'Pygad']\n        }, 'cl√©', false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Jobs, \"OiAXxxxsYj+jaR+r4tdEB3xCcqw=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["ExperienceCard","ThpaceGL","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","jobDescInsee","jobDescSteelSeries","jobDescLig","Jobs","_s","canvas","settings","colors","triangleSize","create","current","children","ref","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","className","title","company","description","duration","link","location","skills","_c","$RefreshReg$"],"sources":["C:/Users/prw/OneDrive/Bureau/dev/django-react-portfolio/frontend/src/components/Experiences/Jobs.tsx"],"sourcesContent":["\r\nimport SteelSeriesImgSrc from \"../../../public/steelserieslogo.png\"\r\nimport WaveSeparator from \"../WaveSeparator\";\r\nimport \"../../styles/jobs.scss\"\r\nimport ExperienceCard from \"./ExperienceCard\";\r\nimport { ThpaceGL } from 'thpace';\r\nimport { useRef } from \"react\";\r\n\r\nconst jobDescInsee = `\r\nMore coming...`\r\n\r\nconst jobDescSteelSeries = `\r\n- Working for a US/French team in SteelSeries, one of the world leaders in gaming hardware\r\n- Design and development with React and Python of a software tool for generating configurations from images and videos for automated video clip captures\r\n- Close collaboration with the team to ensure seamless integration of the tool into the existing ecosystem`\r\n\r\nconst jobDescLig = `\r\n- Research into new methods for processing VAD (Voice Activity Detection) output data to create speech segmentation\r\n- Development and training of supervised learning models\r\n- Writing of a scientific article`\r\n\r\nconst Jobs = () => {\r\n\r\n  const canvas = useRef<any>()\r\n\r\n  const settings = {\r\n    colors: ['#4CB1EF', '#424959', '#FF4B44'],\r\n    triangleSize: 100,\r\n  };\r\n\r\n  ThpaceGL.create(canvas.current, settings)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <canvas ref={canvas} onLoad={() => ThpaceGL.create(canvas.current, settings)}/>\r\n    <div className=\"jobs\">\r\n      <h3 className=\"job-title\">Professional Experience üßëüèΩ‚Äçüíª</h3>\r\n      <div className=\"jobs-list\">\r\n            <ExperienceCard title='Software Engineer' company='INSEE' description={jobDescInsee} duration='2024 - now' link='insee.com' location='Lille' skills={['Python', 'React', 'Java', 'Spring']} key={'cl√©'}/>\r\n            <ExperienceCard title='Intern Software Engineer' company='SteelSeries' description={jobDescSteelSeries} duration='2023 - 2024' link='steelseries.com' location='Lille' skills={['Python', 'React', 'Pywebview', 'OpenCV', 'TypeScript', 'Redux']} key={'cl√©'}/>\r\n            <ExperienceCard title='Intern R&D Engineer' company='LIG' description={jobDescLig} duration='2022' link='liglab.fr' location='Grenoble' skills={['Python', 'Pytorch', 'Scikit-Learn', 'Pygad']} key={'cl√©'}/>\r\n\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}