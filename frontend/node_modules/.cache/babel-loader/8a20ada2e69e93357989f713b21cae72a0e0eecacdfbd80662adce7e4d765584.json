{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prw\\\\OneDrive\\\\Bureau\\\\dev\\\\django-react-portfolio\\\\frontend\\\\src\\\\components\\\\Experiences\\\\Jobs.tsx\",\n  _s = $RefreshSig$();\nimport \"../../styles/jobs.scss\";\nimport ExperienceCard from \"./ExperienceCard\";\nimport { ThpaceGL } from 'thpace';\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst jobDescInsee = `\nMore coming...`;\nconst jobDescSteelSeries = `\n- Working for a US/French team in SteelSeries, one of the world leaders in gaming hardware\n- Design and development with React and Python of a software tool for generating configurations from images and videos for automated video clip captures\n- Close collaboration with the team to ensure seamless integration of the tool into the existing ecosystem`;\nconst jobDescLig = `\n- Research into new methods for processing VAD (Voice Activity Detection) output data to create speech segmentation\n- Development and training of supervised learning models\n- Writing of a scientific article`;\nconst Jobs = () => {\n  _s();\n  const canvas = useRef();\n  const settings = {\n    colors: ['white', 'grey', 'green'],\n    triangleSize: 100\n  };\n  ThpaceGL.create(canvas.current, settings);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jobs\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas,\n      width: '100%',\n      onLoad: () => ThpaceGL.create(canvas.current, settings)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"job-title\",\n      children: \"Professional Experience \\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83D\\uDCBB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs-list\",\n      children: [/*#__PURE__*/_jsxDEV(ExperienceCard, {\n        title: \"Software Engineer\",\n        company: \"INSEE\",\n        description: jobDescInsee,\n        duration: \"2024 - now\",\n        link: \"insee.com\",\n        location: \"Lille\",\n        skills: ['Python', 'React', 'Java', 'Spring']\n      }, 'cl√©', false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ExperienceCard, {\n        title: \"Intern Software Engineer\",\n        company: \"SteelSeries\",\n        description: jobDescSteelSeries,\n        duration: \"2023 - 2024\",\n        link: \"steelseries.com\",\n        location: \"Lille\",\n        skills: ['Python', 'React', 'Pywebview', 'OpenCV', 'TypeScript', 'Redux']\n      }, 'cl√©', false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ExperienceCard, {\n        title: \"Intern R&D Engineer\",\n        company: \"LIG\",\n        description: jobDescLig,\n        duration: \"2022\",\n        link: \"liglab.fr\",\n        location: \"Grenoble\",\n        skills: ['Python', 'Pytorch', 'Scikit-Learn', 'Pygad']\n      }, 'cl√©', false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Jobs, \"OiAXxxxsYj+jaR+r4tdEB3xCcqw=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["ExperienceCard","ThpaceGL","useRef","jsxDEV","_jsxDEV","jobDescInsee","jobDescSteelSeries","jobDescLig","Jobs","_s","canvas","settings","colors","triangleSize","create","current","className","children","ref","width","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","title","company","description","duration","link","location","skills","_c","$RefreshReg$"],"sources":["C:/Users/prw/OneDrive/Bureau/dev/django-react-portfolio/frontend/src/components/Experiences/Jobs.tsx"],"sourcesContent":["\r\nimport SteelSeriesImgSrc from \"../../../public/steelserieslogo.png\"\r\nimport WaveSeparator from \"../WaveSeparator\";\r\nimport \"../../styles/jobs.scss\"\r\nimport ExperienceCard from \"./ExperienceCard\";\r\nimport { ThpaceGL } from 'thpace';\r\nimport { useRef } from \"react\";\r\n\r\nconst jobDescInsee = `\r\nMore coming...`\r\n\r\nconst jobDescSteelSeries = `\r\n- Working for a US/French team in SteelSeries, one of the world leaders in gaming hardware\r\n- Design and development with React and Python of a software tool for generating configurations from images and videos for automated video clip captures\r\n- Close collaboration with the team to ensure seamless integration of the tool into the existing ecosystem`\r\n\r\nconst jobDescLig = `\r\n- Research into new methods for processing VAD (Voice Activity Detection) output data to create speech segmentation\r\n- Development and training of supervised learning models\r\n- Writing of a scientific article`\r\n\r\nconst Jobs = () => {\r\n\r\n  const canvas = useRef<any>()\r\n\r\n  const settings = {\r\n    colors: ['white', 'grey', 'green'],\r\n    triangleSize: 100,\r\n  };\r\n\r\n  ThpaceGL.create(canvas.current, settings)\r\n\r\n  return (\r\n    <div className=\"jobs\">\r\n      <canvas ref={canvas} width={'100%'}  onLoad={() => ThpaceGL.create(canvas.current, settings)}/>\r\n      <h3 className=\"job-title\">Professional Experience üßëüèΩ‚Äçüíª</h3>\r\n      <div className=\"jobs-list\">\r\n            <ExperienceCard title='Software Engineer' company='INSEE' description={jobDescInsee} duration='2024 - now' link='insee.com' location='Lille' skills={['Python', 'React', 'Java', 'Spring']} key={'cl√©'}/>\r\n            <ExperienceCard title='Intern Software Engineer' company='SteelSeries' description={jobDescSteelSeries} duration='2023 - 2024' link='steelseries.com' location='Lille' skills={['Python', 'React', 'Pywebview', 'OpenCV', 'TypeScript', 'Redux']} key={'cl√©'}/>\r\n            <ExperienceCard title='Intern R&D Engineer' company='LIG' description={jobDescLig} duration='2022' link='liglab.fr' location='Grenoble' skills={['Python', 'Pytorch', 'Scikit-Learn', 'Pygad']} key={'cl√©'}/>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}